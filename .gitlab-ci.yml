# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

variables:
  GIT_SUBMODULE_STRATEGY: recursive 
  INSTALL_DIR: $CI_PROJECT_DIR/install

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build

  script:
    - mkdir $INSTALL_DIR

    - mkdir temp && cd temp
    - git clone https://github.com/orocos/orocos_kinematics_dynamics.git
    - curl https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz -o eigen-3.4.0.tar.gz 
    
    - tar xfz eigen-3.4.0.tar.gz
    - cd eigen-3.4.0/
    - mkdir build && cd build
    - cmake .. -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR && make && make install

    - cd $CI_PROJECT_DIR/temp/orocos_kinematics_dynamics/orocos_kdl
    - mkdir build && cd build
    - cmake ..  -DCMAKE_PREFIX_PATH=$INSTALL_DIR/share/ -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR && make && make install

    - cd $CI_PROJECT_DIR && rm -rd temp

    - cd $CI_PROJECT_DIR
    - mkdir build && cd build
    - cmake .. -DBUILD_TESTS=ON -DCMAKE_PREFIX_PATH=$INSTALL_DIR/share/ -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR && make && make install
  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
    paths:
      - $INSTALL_DIR
      - $CI_PROJECT_DIR/build


unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - cd build
    - make test

lint-test-job:   # This job also runs in the test stage.
  tags:
    - linux
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  tags:
    - linux
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
